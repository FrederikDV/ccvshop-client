<?php

declare(strict_types=1);

namespace JacobDeKeizer\Ccv\Models\Vnd\Verto\Webshop\Entity\Geozonecountries;

use JacobDeKeizer\Ccv\Contracts\Model;
use JacobDeKeizer\Ccv\Traits\FromArray;
use JacobDeKeizer\Ccv\Traits\ToArray;

/**
 * This class is autogenerated.
 */
class Geozonecountries implements Model
{
    use FromArray;
    use ToArray;

    /**
     * @var string Name of the country.
     */
    private string $country;

    /**
     * @var string Country code.
     */
    private string $code;

    /**
     * @var int Unique identifier for the geozone this country is a part of.
     */
    private int $geozoneId;

    /**
     * @var string Name of the geozone this country is a part of.
     */
    private string $geozoneName;

    /**
     * @var \JacobDeKeizer\Ccv\Models\Vnd\Verto\Webshop\Entity\Geozonecountries\Tariff\Tariff[] Collection of the geozone countries.
     */
    private array $tariffs;

    public static function fromArray(array $data): static
    {
        return static::createFromArray($data);
    }

    /**
     * @return string Name of the country.
     */
    public function getCountry(): string
    {
        return $this->country;
    }

    /**
     * @return string Country code.
     */
    public function getCode(): string
    {
        return $this->code;
    }

    /**
     * @return int Unique identifier for the geozone this country is a part of.
     */
    public function getGeozoneId(): int
    {
        return $this->geozoneId;
    }

    /**
     * @return string Name of the geozone this country is a part of.
     */
    public function getGeozoneName(): string
    {
        return $this->geozoneName;
    }

    /**
     * @return \JacobDeKeizer\Ccv\Models\Vnd\Verto\Webshop\Entity\Geozonecountries\Tariff\Tariff[] Collection of the geozone countries.
     */
    public function getTariffs(): array
    {
        return $this->tariffs;
    }

    /**
     * @param string $country Name of the country.
     * @return self
     */
    public function setCountry(string $country): self
    {
        $this->country = $country;
        return $this;
    }

    /**
     * @param string $code Country code.
     * @return self
     */
    public function setCode(string $code): self
    {
        $this->code = $code;
        return $this;
    }

    /**
     * @param int $geozoneId Unique identifier for the geozone this country is a part of.
     * @return self
     */
    public function setGeozoneId(int $geozoneId): self
    {
        $this->geozoneId = $geozoneId;
        return $this;
    }

    /**
     * @param string $geozoneName Name of the geozone this country is a part of.
     * @return self
     */
    public function setGeozoneName(string $geozoneName): self
    {
        $this->geozoneName = $geozoneName;
        return $this;
    }

    /**
     * @param \JacobDeKeizer\Ccv\Models\Vnd\Verto\Webshop\Entity\Geozonecountries\Tariff\Tariff ...$tariffs $tariffs Collection of the geozone countries.
     * @return self
     */
    public function setTariffs(\JacobDeKeizer\Ccv\Models\Vnd\Verto\Webshop\Entity\Geozonecountries\Tariff\Tariff ...$tariffs): self
    {
        $this->tariffs = $tariffs;
        return $this;
    }
}
