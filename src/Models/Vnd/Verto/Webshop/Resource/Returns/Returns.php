<?php

declare(strict_types=1);

namespace JacobDeKeizer\Ccv\Models\Vnd\Verto\Webshop\Resource\Returns;

use JacobDeKeizer\Ccv\Contracts\Model;
use JacobDeKeizer\Ccv\Traits\FromArray;
use JacobDeKeizer\Ccv\Traits\ToArray;

/**
 * This class is autogenerated.
 */
class Returns implements Model
{
    use FromArray;
    use ToArray;

    /**
     * @var string Link to self.
     */
    private string $href;

    /**
     * @var int Return id.
     */
    private int $id;

    /**
     * @var string|null Prefix of the specific return number of the return. Automatically generated when the return is created.
     */
    private ?string $returnnumberPrefix;

    /**
     * @var int Return number, automatically generated when the return is created.
     */
    private int $returnnumber;

    /**
     * @var string Unique return number, Full return number as displayed in shop. With dash if the prefix is available.
     */
    private string $returnnumberFull;

    /**
     * @var string|null Prefix of the specific order number of the order that this return is created from. automatically generated when the return is created.
     */
    private ?string $ordernumberPrefix;

    /**
     * @var int Order number of the order that this return is created from, automatically generated when the return is created.
     */
    private int $ordernumber;

    /**
     * @var string Unique order number, Full ordernumber of the order that this return is created from as displayed in shop. With dash if the prefix is available.
     */
    private string $ordernumberFull;

    /**
     * @var string Createdate of this invoice in UTC.
     */
    private string $createDate;

    /**
     * @var string Status of the return. 1. New. 2. Processing. 3. Custom 1. 4. Custom 2. 5. Custom 3. 6. Canceled. 7. Completed. 8. Credited.
     */
    private string $status;

    /**
     * @var string The display name of the return status.
     */
    private string $statusName;

    /**
     * @var string Action of the return. These are configured through the settings.
     */
    private string $actionName;

    /**
     * @var string Reason of the return. These are configured through the settings.
     */
    private string $reasonName;

    /**
     * @var float Total price inc tax.
     */
    private float $totalPriceIncTax;

    /**
     * @var float Total price excl tax.
     */
    private float $totalPriceExcTax;

    /**
     * @var float Total price.
     */
    private float $totalPrice;

    /**
     * @var float Total tax amount.
     */
    private float $totalTax;

    /**
     * @var string ISO 4217 Currency Code.
     */
    private string $currency;

    /**
     * @var \JacobDeKeizer\Ccv\Models\Vnd\Verto\Webshop\Resource\Returns\Child\User Link to possible user resource associated with this return.
     */
    private \JacobDeKeizer\Ccv\Models\Vnd\Verto\Webshop\Resource\Returns\Child\User $user;

    /**
     * @var \JacobDeKeizer\Ccv\Models\Vnd\Verto\Webshop\Entity\Personalinfo\Personalinfo Describes personal information of the customer.
     */
    private \JacobDeKeizer\Ccv\Models\Vnd\Verto\Webshop\Entity\Personalinfo\Personalinfo $customer;

    /**
     * @var string Link to the order associated with this return.
     */
    private string $order;

    /**
     * @var \JacobDeKeizer\Ccv\Models\Vnd\Verto\Webshop\Resource\Returns\Child\Returnrows Products that are included in this return.
     */
    private \JacobDeKeizer\Ccv\Models\Vnd\Verto\Webshop\Resource\Returns\Child\Returnrows $returnrows;

    public static function fromArray(array $data): static
    {
        return static::createFromArray($data);
    }

    /**
     * @return string Link to self.
     */
    public function getHref(): string
    {
        return $this->href;
    }

    /**
     * @return int Return id.
     */
    public function getId(): int
    {
        return $this->id;
    }

    /**
     * @return string|null Prefix of the specific return number of the return. Automatically generated when the return is created.
     */
    public function getReturnnumberPrefix(): ?string
    {
        return $this->returnnumberPrefix;
    }

    /**
     * @return int Return number, automatically generated when the return is created.
     */
    public function getReturnnumber(): int
    {
        return $this->returnnumber;
    }

    /**
     * @return string Unique return number, Full return number as displayed in shop. With dash if the prefix is available.
     */
    public function getReturnnumberFull(): string
    {
        return $this->returnnumberFull;
    }

    /**
     * @return string|null Prefix of the specific order number of the order that this return is created from. automatically generated when the return is created.
     */
    public function getOrdernumberPrefix(): ?string
    {
        return $this->ordernumberPrefix;
    }

    /**
     * @return int Order number of the order that this return is created from, automatically generated when the return is created.
     */
    public function getOrdernumber(): int
    {
        return $this->ordernumber;
    }

    /**
     * @return string Unique order number, Full ordernumber of the order that this return is created from as displayed in shop. With dash if the prefix is available.
     */
    public function getOrdernumberFull(): string
    {
        return $this->ordernumberFull;
    }

    /**
     * @return string Createdate of this invoice in UTC.
     */
    public function getCreateDate(): string
    {
        return $this->createDate;
    }

    /**
     * @return string Status of the return. 1. New. 2. Processing. 3. Custom 1. 4. Custom 2. 5. Custom 3. 6. Canceled. 7. Completed. 8. Credited.
     */
    public function getStatus(): string
    {
        return $this->status;
    }

    /**
     * @return string The display name of the return status.
     */
    public function getStatusName(): string
    {
        return $this->statusName;
    }

    /**
     * @return string Action of the return. These are configured through the settings.
     */
    public function getActionName(): string
    {
        return $this->actionName;
    }

    /**
     * @return string Reason of the return. These are configured through the settings.
     */
    public function getReasonName(): string
    {
        return $this->reasonName;
    }

    /**
     * @return float Total price inc tax.
     */
    public function getTotalPriceIncTax(): float
    {
        return $this->totalPriceIncTax;
    }

    /**
     * @return float Total price excl tax.
     */
    public function getTotalPriceExcTax(): float
    {
        return $this->totalPriceExcTax;
    }

    /**
     * @return float Total price.
     */
    public function getTotalPrice(): float
    {
        return $this->totalPrice;
    }

    /**
     * @return float Total tax amount.
     */
    public function getTotalTax(): float
    {
        return $this->totalTax;
    }

    /**
     * @return string ISO 4217 Currency Code.
     */
    public function getCurrency(): string
    {
        return $this->currency;
    }

    /**
     * @return \JacobDeKeizer\Ccv\Models\Vnd\Verto\Webshop\Resource\Returns\Child\User Link to possible user resource associated with this return.
     */
    public function getUser(): \JacobDeKeizer\Ccv\Models\Vnd\Verto\Webshop\Resource\Returns\Child\User
    {
        return $this->user;
    }

    /**
     * @return \JacobDeKeizer\Ccv\Models\Vnd\Verto\Webshop\Entity\Personalinfo\Personalinfo Describes personal information of the customer.
     */
    public function getCustomer(): \JacobDeKeizer\Ccv\Models\Vnd\Verto\Webshop\Entity\Personalinfo\Personalinfo
    {
        return $this->customer;
    }

    /**
     * @return string Link to the order associated with this return.
     */
    public function getOrder(): string
    {
        return $this->order;
    }

    /**
     * @return \JacobDeKeizer\Ccv\Models\Vnd\Verto\Webshop\Resource\Returns\Child\Returnrows Products that are included in this return.
     */
    public function getReturnrows(): \JacobDeKeizer\Ccv\Models\Vnd\Verto\Webshop\Resource\Returns\Child\Returnrows
    {
        return $this->returnrows;
    }

    /**
     * @param string $href Link to self.
     * @return self
     */
    public function setHref(string $href): self
    {
        $this->href = $href;
        return $this;
    }

    /**
     * @param int $id Return id.
     * @return self
     */
    public function setId(int $id): self
    {
        $this->id = $id;
        return $this;
    }

    /**
     * @param string|null $returnnumberPrefix Prefix of the specific return number of the return. Automatically generated when the return is created.
     * @return self
     */
    public function setReturnnumberPrefix(?string $returnnumberPrefix): self
    {
        $this->returnnumberPrefix = $returnnumberPrefix;
        return $this;
    }

    /**
     * @param int $returnnumber Return number, automatically generated when the return is created.
     * @return self
     */
    public function setReturnnumber(int $returnnumber): self
    {
        $this->returnnumber = $returnnumber;
        return $this;
    }

    /**
     * @param string $returnnumberFull Unique return number, Full return number as displayed in shop. With dash if the prefix is available.
     * @return self
     */
    public function setReturnnumberFull(string $returnnumberFull): self
    {
        $this->returnnumberFull = $returnnumberFull;
        return $this;
    }

    /**
     * @param string|null $ordernumberPrefix Prefix of the specific order number of the order that this return is created from. automatically generated when the return is created.
     * @return self
     */
    public function setOrdernumberPrefix(?string $ordernumberPrefix): self
    {
        $this->ordernumberPrefix = $ordernumberPrefix;
        return $this;
    }

    /**
     * @param int $ordernumber Order number of the order that this return is created from, automatically generated when the return is created.
     * @return self
     */
    public function setOrdernumber(int $ordernumber): self
    {
        $this->ordernumber = $ordernumber;
        return $this;
    }

    /**
     * @param string $ordernumberFull Unique order number, Full ordernumber of the order that this return is created from as displayed in shop. With dash if the prefix is available.
     * @return self
     */
    public function setOrdernumberFull(string $ordernumberFull): self
    {
        $this->ordernumberFull = $ordernumberFull;
        return $this;
    }

    /**
     * @param string $createDate Createdate of this invoice in UTC.
     * @return self
     */
    public function setCreateDate(string $createDate): self
    {
        $this->createDate = $createDate;
        return $this;
    }

    /**
     * @param string $status Status of the return. 1. New. 2. Processing. 3. Custom 1. 4. Custom 2. 5. Custom 3. 6. Canceled. 7. Completed. 8. Credited.
     * @return self
     */
    public function setStatus(string $status): self
    {
        $this->status = $status;
        return $this;
    }

    /**
     * @param string $statusName The display name of the return status.
     * @return self
     */
    public function setStatusName(string $statusName): self
    {
        $this->statusName = $statusName;
        return $this;
    }

    /**
     * @param string $actionName Action of the return. These are configured through the settings.
     * @return self
     */
    public function setActionName(string $actionName): self
    {
        $this->actionName = $actionName;
        return $this;
    }

    /**
     * @param string $reasonName Reason of the return. These are configured through the settings.
     * @return self
     */
    public function setReasonName(string $reasonName): self
    {
        $this->reasonName = $reasonName;
        return $this;
    }

    /**
     * @param float $totalPriceIncTax Total price inc tax.
     * @return self
     */
    public function setTotalPriceIncTax(float $totalPriceIncTax): self
    {
        $this->totalPriceIncTax = $totalPriceIncTax;
        return $this;
    }

    /**
     * @param float $totalPriceExcTax Total price excl tax.
     * @return self
     */
    public function setTotalPriceExcTax(float $totalPriceExcTax): self
    {
        $this->totalPriceExcTax = $totalPriceExcTax;
        return $this;
    }

    /**
     * @param float $totalPrice Total price.
     * @return self
     */
    public function setTotalPrice(float $totalPrice): self
    {
        $this->totalPrice = $totalPrice;
        return $this;
    }

    /**
     * @param float $totalTax Total tax amount.
     * @return self
     */
    public function setTotalTax(float $totalTax): self
    {
        $this->totalTax = $totalTax;
        return $this;
    }

    /**
     * @param string $currency ISO 4217 Currency Code.
     * @return self
     */
    public function setCurrency(string $currency): self
    {
        $this->currency = $currency;
        return $this;
    }

    /**
     * @param \JacobDeKeizer\Ccv\Models\Vnd\Verto\Webshop\Resource\Returns\Child\User $user Link to possible user resource associated with this return.
     * @return self
     */
    public function setUser(\JacobDeKeizer\Ccv\Models\Vnd\Verto\Webshop\Resource\Returns\Child\User $user): self
    {
        $this->user = $user;
        return $this;
    }

    /**
     * @param \JacobDeKeizer\Ccv\Models\Vnd\Verto\Webshop\Entity\Personalinfo\Personalinfo $customer Describes personal information of the customer.
     * @return self
     */
    public function setCustomer(\JacobDeKeizer\Ccv\Models\Vnd\Verto\Webshop\Entity\Personalinfo\Personalinfo $customer): self
    {
        $this->customer = $customer;
        return $this;
    }

    /**
     * @param string $order Link to the order associated with this return.
     * @return self
     */
    public function setOrder(string $order): self
    {
        $this->order = $order;
        return $this;
    }

    /**
     * @param \JacobDeKeizer\Ccv\Models\Vnd\Verto\Webshop\Resource\Returns\Child\Returnrows $returnrows Products that are included in this return.
     * @return self
     */
    public function setReturnrows(\JacobDeKeizer\Ccv\Models\Vnd\Verto\Webshop\Resource\Returns\Child\Returnrows $returnrows): self
    {
        $this->returnrows = $returnrows;
        return $this;
    }
}
